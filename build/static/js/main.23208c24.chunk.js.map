{"version":3,"sources":["Components/contactForm/ContactForm.js","Components/filter/Filter.js","Components/contactList/ContactList.js","Components/App.js","index.js","Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css","Components/filter/Filter.module.css"],"names":["ContactForm","checkExist","useState","name","setName","number","setNumber","handleContactData","e","target","value","onSubmit","preventDefault","className","styles","form","formLabel","formInput","type","pattern","title","required","onChange","formBtn","Filter","inputValue","handleFilter","filterLabel","filterInput","ContactList","contacts","handleDelete","contactList","map","id","contactListItem","contactsName","contactsBtn","onClick","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newContact","some","contact","toLocaleLowerCase","alert","uuidv4","currentTarget","toLowerCase","includes","ReactDOM","render","document","getElementById","module","exports"],"mappings":"2OAwEeA,MApEf,YAAsC,IAAfC,EAAc,EAAdA,WACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAWN,OACE,uBAAMC,SARa,SAACH,GACpBA,EAAEI,iBACFX,EAAW,CAAEE,OAAME,WACnBD,EAAQ,IACRE,EAAU,KAIoBO,UAAWC,IAAOC,KAAhD,UACE,wBAAOF,UAAWC,IAAOE,UAAzB,iBAEE,uBACEH,UAAWC,IAAOG,UAClBP,MAAOP,EACPe,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUf,OAId,wBAAOM,UAAWC,IAAOE,UAAzB,mBAEE,uBACEH,UAAWC,IAAOG,UAClBP,MAAOL,EACPa,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUf,OAId,wBAAQW,KAAK,SAASL,UAAWC,IAAOS,QAAxC,6B,gBCpCSC,EArBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC5B,OACE,mCACE,wBAAOb,UAAWC,IAAOa,YAAzB,kCAEE,uBACEd,UAAWC,IAAOc,YAClBV,KAAK,OACLR,MAAOe,EACPH,SAAUI,U,gBCkBLG,EA3BK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC/B,OACE,oBAAIlB,UAAWC,IAAOkB,YAAtB,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAI/B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAaQ,UAAWC,IAAOqB,gBAA/B,UACE,oBAAGtB,UAAWC,IAAOsB,aAArB,UACGjC,EADH,KACWE,KAGX,wBACEQ,UAAWC,IAAOuB,YAClBnB,KAAK,SACLoB,QAAS,kBAAMP,EAAaG,IAH9B,sBALOA,S,QC6CFK,MA/Cf,WACE,MAAgCrC,mBAC9BsC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,IADlD,mBAAOb,EAAP,KAAiBc,EAAjB,KAGA,EAA4B1C,mBAAS,IAArC,mBAAO2C,EAAP,KAAeC,EAAf,KA+BA,OA7BAC,qBAAU,WACRL,aAAaM,QAAQ,WAAYR,KAAKS,UAAL,YAAmBnB,OACnD,CAACA,IA4BF,gCACE,2CACA,cAAC,EAAD,CAAa7B,WA5BQ,SAACiD,GACxBpB,EAASqB,MACP,SAACC,GAAD,OACEA,EAAQjD,KAAKkD,sBACXH,EAAW/C,KAAKkD,qBAClBvB,EAASqB,MAAK,SAACC,GAAD,OAAaA,EAAQ/C,SAAW6C,EAAW7C,aAEzDiD,MAAM,UAAD,OACOJ,EAAW/C,KADlB,sBACoC+C,EAAW7C,OAD/C,qBAGLuC,EAAY,GAAD,mBAAKd,GAAL,aAAC,eAAmBoB,GAApB,IAAgChB,GAAIqB,sBAoBjD,0CACA,cAAC,EAAD,CAAQ9B,WAAYoB,EAAQnB,aAlBX,SAAClB,GACpBsC,EAAUtC,EAAEgD,cAAc9C,UAkBxB,cAAC,EAAD,CAAaoB,SAffA,EAASe,QAAO,qBAAG1C,KACZsD,cAAcC,SAASb,EAAOY,kBAcQ1B,aAX1B,SAACG,GACpBU,EAAYd,EAASe,QAAO,SAACO,GAAD,OAAaA,EAAQlB,KAAOA,aClC5DyB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,+B,kBCAnJD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,aAAe,kCAAkC,YAAc,mC,kBCAvLD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,+B","file":"static/js/main.23208c24.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm({ checkExist }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleContactData = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    checkExist({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.formLabel}>\r\n        Name\r\n        <input\r\n          className={styles.formInput}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.formLabel}>\r\n        Number\r\n        <input\r\n          className={styles.formInput}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.formBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  checkExist: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ inputValue, handleFilter }) => {\r\n  return (\r\n    <>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.filterInput}\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleFilter}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  inputValue: PropTypes.string.isRequired,\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, handleDelete }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contactListItem}>\r\n          <p className={styles.contactsName}>\r\n            {name}: {number}\r\n          </p>\r\n\r\n          <button\r\n            className={styles.contactsBtn}\r\n            type=\"button\"\r\n            onClick={() => handleDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(localStorage.getItem(\"contacts\")) || []\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify([...contacts]));\r\n  }, [contacts]);\r\n\r\n  const checkExistAndAdd = (newContact) => {\r\n    contacts.some(\r\n      (contact) =>\r\n        contact.name.toLocaleLowerCase() ===\r\n          newContact.name.toLocaleLowerCase() ||\r\n        contacts.some((contact) => contact.number === newContact.number)\r\n    )\r\n      ? alert(\r\n          `Friend ${newContact.name} or number ${newContact.number} is alredy exist`\r\n        )\r\n      : setContacts([...contacts, { ...newContact, id: uuidv4() }]);\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n  const filteredContacts = () =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n  const handleDelete = (id) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm checkExist={checkExistAndAdd} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter inputValue={filter} handleFilter={handleFilter} />\r\n      <ContactList contacts={filteredContacts()} handleDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3bfVC\",\"formLabel\":\"ContactForm_formLabel__QKj2E\",\"formInput\":\"ContactForm_formInput__2k8k0\",\"formBtn\":\"ContactForm_formBtn__2oGPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3WR0p\",\"contactListItem\":\"ContactList_contactListItem__vK-3O\",\"contactsName\":\"ContactList_contactsName__2oNWN\",\"contactsBtn\":\"ContactList_contactsBtn__3NTpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3DDDZ\",\"filterInput\":\"Filter_filterInput__2r3_o\"};"],"sourceRoot":""}